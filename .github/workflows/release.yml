name: 'release'

on:
  push:
    branches:
      - release-*
    tags:
      - 'v*'

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          # x86 MacOS doesn't work on Github actions, target cannot be added on Ubuntu
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: x86_64-apple-darwin, aarch64-apple-darwin

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # casey/just systems
      - uses: extractions/setup-just@v1

      - name: Install ollama on Windows
        if: matrix.platform == 'windows-latest'
        run: just install_ollama_windows

      - name: Install ollama on MacOS
        if: matrix.platform == 'macos-latest'
        run: |
          curl -L https://github.com/roblabla/MacOSX-SDKs/releases/download/13.3/MacOSX13.3.sdk.tar.xz | tar xJ
          export SDKROOT=$(pwd)/MacOSX13.3.sdk/
          export PATH=$PATH:~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/
          export CARGO_TARGET_X86_64_APPLE_DARWIN_LINKER=rust-lld
          rustup target add x86_64-apple-darwin          
          just install_ollama_macos

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          just install_ollama_linux
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'PeerPiper Desktop App v__VERSION__'
          releaseBody: 'See the assets to download this version and install. Windows, Linux, and Apple Silicon.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
